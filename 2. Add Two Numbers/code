class Solution {
public:
    void insertAtTail(ListNode* &head,ListNode* &tail,int digit){
        ListNode* temp = new ListNode(digit);
        if(head==NULL){
            head = temp;
            tail = temp;
            return;
        }
        else{
            tail->next = temp;
            tail = temp;
        }
    }
    ListNode* solve(ListNode* first, ListNode* second){

        ListNode* head = NULL;
        ListNode* tail = NULL;

        int carry = 0;
        while(first != NULL && second != NULL){
            int sum = carry + first->val + second->val;
            int digit = sum%10;
            carry = sum/10;

            insertAtTail(head,tail,digit);
            first = first->next;
            second = second->next;
        }
        while(first != NULL){
            int sum = carry + first->val;
            int digit = sum%10;
            carry = sum/10;

            insertAtTail(head,tail,digit);
            first = first->next;
        }
        while(second != NULL){
            int sum = carry + second->val;
            int digit = sum%10;
            carry = sum/10;

            insertAtTail(head,tail,digit);
            second = second->next;
        }
        while(carry != 0){
            int sum = carry;
            int digit = sum%10;
            carry = sum/10;
            insertAtTail(head,tail,digit);
        }
        return head;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {

        ListNode* sum = solve(l1,l2);

        return sum;
    }
};
