/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> result;
    	if(root == NULL){
    	    return result;
    	}
    	
    	queue<TreeNode*> q;
    	q.push(root);
        
    	while(!q.empty()){
    	    int size = q.size();
    	    vector<int> ans(size);
    	    
    	    //level process
    	    for(int i=0;i<size;i++){
    	        TreeNode* m = q.front();
    	        q.pop();
    	        
    	        ans[i] = m->val;
    	        
    	        if(m->left){
    	            q.push(m->left);
    	        }
    	        if(m->right){
    	            q.push(m->right);
    	        }
    	    }
        	result.push_back(ans);
    	}
        reverse(result.begin(),result.end());
    	
    	return result;
    }
};
