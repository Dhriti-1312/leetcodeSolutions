class Solution {
public:
    bool buddyStrings(string s, string goal) {
        if(s.length()!=goal.length()){
            return false;
        }

        unordered_map<char,int> m;
        if(s==goal){
            for(int i=0;i<s.size();i++){
                m[s[i]]++;
                if(m[s[i]]==2){
                    return true;
                }
            }
        }
        int cnt=0;
        int j=-1;
        int k=-1;
        for(int i=0;i<s.size();i++){
            if(s[i]!=goal[i]){
                cnt++;
                if(cnt==1){
                    j=i;
                }
                if(cnt==2){
                    k=i;
                }
            }
        }

        if(cnt==2){
            swap(s[j],s[k]);
            if(s==goal){
                return true;
            }
        }
        return false;
    }
};
