class Solution {
public:
    struct compare{
        bool operator()(const pair<char,int>& a, const pair<char,int>& b){
            return a.second<b.second;
        }
    };
    string frequencySort(string s) {
        unordered_map<char,int> m;
        for(char ch : s){
            m[ch]++;
        }
        priority_queue<pair<char,int>, vector<pair<char,int>>,compare> pq;

        for(auto &it : m){
            pq.push({it.first,it.second});
        }

        string ans = "";
        while(!pq.empty()){
            auto top = pq.top();
            ans += string(top.second,top.first);
            pq.pop();
        }

        return ans;
    }
};
