class Solution {
public:
    void inorder(TreeNode* root,vector<int>& in){
        if(root==NULL){
            return;
        }
        inorder(root->left,in);
        in.push_back(root->val);
        inorder(root->right,in);
    }
    TreeNode* inorderToBST(int s,int e,vector<int>& in){
        if(s>e){
            return NULL;
        }
        int mid = (s+e)/2;
        TreeNode* newRoot = new TreeNode(in[mid]);
        newRoot->left = inorderToBST(s,mid-1,in);
        newRoot->right = inorderToBST(mid+1,e,in);

        return newRoot;
    }
    TreeNode* balanceBST(TreeNode* root) {
        vector<int> in;
        inorder(root,in);
        int n = in.size()-1;
        return inorderToBST(0,n,in);
    }
};
